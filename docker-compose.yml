services:
  postgres:
    container_name: ms_pg_sql
    image: postgres:latest
    environment:
      POSTGRES_USER: gallagher
      POSTGRES_PASSWORD: gallagher09
      POSTGRES_DB: customer
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-multiple-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multiple-postgres-databases.sh
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    container_name: ms_mongo_db
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: gallagher
      MONGO_INITDB_ROOT_PASSWORD: gallagher09
    volumes:
      - mongo:/data/db
    networks:
      - microservices-net
    restart: unless-stopped

  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: gallagher
      ME_CONFIG_MONGODB_ADMINPASSWORD: gallagher09
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092  
    networks:
      - microservices-net

  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

  zipkin:
    container_name: ms_zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  keycloak:
    container_name: ms_keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - "9098:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - microservices-net
    command: start-dev

  # config-server:
  #   image: franckgallagher/ecommerce-config-server:latest
  #   container_name: ecommerce-config-server
  #   ports:
  #     - "8888:8888"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped

  # discovery:
  #   image: franckgallagher/ecommerce-discovery:latest
  #   container_name: ecommerce-discovery
  #   ports:
  #     - "8761:8761"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   depends_on:
  #     - config-server
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped
    
  # gateway:
  #   image: franckgallagher/ecommerce-gateway:latest
  #   container_name: ecommerce-gateway
  #   ports:
  #     - "8222:8222"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   depends_on:
  #     - config-server
  #     - discovery
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped

  # customer:
  #   image: franckgallagher/ecommerce-customer:latest
  #   container_name: ecommerce-customer
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/customer
  #     - SPRING_DATASOURCE_USERNAME=gallagher
  #     - SPRING_DATASOURCE_PASSWORD=gallagher09
  #     - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka/
  #   depends_on:
  #     - postgres
  #     - config-server
  #     - discovery
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped
  
  # product:
  #   image: franckgallagher/ecommerce-product:latest
  #   container_name: ecommerce-product
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/product
  #     - SPRING_DATASOURCE_USERNAME=gallagher
  #     - SPRING_DATASOURCE_PASSWORD=gallagher09
  #     - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka/
  #   depends_on:
  #     - postgres
  #     - config-server
  #     - discovery
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped

  # order:
  #   image: franckgallagher/ecommerce-order:latest
  #   container_name: ecommerce-order
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/order
  #     - SPRING_DATASOURCE_USERNAME=gallagher
  #     - SPRING_DATASOURCE_PASSWORD=gallagher09
  #     - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka/
  #   depends_on:
  #     - postgres
  #     - config-server
  #     - discovery
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped

  # finances:
  #   image: franckgallagher/ecommerce-finances:latest
  #   container_name: ecommerce-finances
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/finances
  #     - SPRING_DATASOURCE_USERNAME=gallagher
  #     - SPRING_DATASOURCE_PASSWORD=gallagher09
  #     - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka/
  #   depends_on:
  #     - postgres
  #     - config-server
  #     - discovery
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped

  # notification:
  #   image: franckgallagher/ecommerce-notification:latest
  #   container_name: ecommerce-notification
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATA_MONGODB_URI=mongodb://gallagher:gallagher09@mongodb:27017/notification?authSource=admin
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka/
  #   depends_on:
  #     - mongodb
  #     - config-server
  #     - discovery
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo: